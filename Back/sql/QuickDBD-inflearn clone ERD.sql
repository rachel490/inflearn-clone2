-- Exported from QuickDBD: https://www.quickdatabasediagrams.com/
-- Link to schema: https://app.quickdatabasediagrams.com/#/d/PAqVF9
-- NOTE! If you have used non-SQL datatypes in your design, you will have to change these here.


CREATE TABLE `USERS` (
    `USER_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `EMAIL` VARCHAR(50)  NOT NULL ,
    `PASSWORD` VARCHAR(200)  NOT NULL ,
    `PHONE_NUMBER` VARCHAR(40)  NULL ,
    `NICK_NAME` VARCHAR(20)  NOT NULL ,
    `INTRODUCE_MESSAGE` TEXT  NULL ,
    `BLOG_URL` VARCHAR2(40)  NULL ,
    `POINT` INT  NOT NULL DEFAULT 0,
    `PROFILE_IMAGE_URL` VARCHAR(200)  NOT NULL ,
    `USER_ROLE_KEY` CHAR(1)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `USER_ID`
    )
);

CREATE TABLE `USER_ROLES` (
    `USER_ROLE_KEY` CHAR(1)  NOT NULL ,
    `TYPE_NAME` VARCHAR(50)  NOT NULL DEFAULT 'student',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `USER_ROLE_KEY`
    )
);

CREATE TABLE `LECTURES` (
    `LECTURE_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `LECTURE_NAME` VARCHAR(50)  NOT NULL ,
    `PRICE` INT  NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `STAR_POINT` INT  NOT NULL DEFAULT 0,
    `SALE_PERCENT` INT  NOT NULL DEFAULT 0,
    `IS_ONLINE` TINYINT(1)  NOT NULL DEFAULT 0,
    `LEARNING_LEVEL` INT  NOT NULL DEFAULT 1,
    `LECTURE_TOTAL_TIME` TIME  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `LECTURE_ID`
    )
);

CREATE TABLE `LECTURE_SESSION` (
    `SESSION_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `SESSION_NAME` VARCHAR(50)  NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `SESSION_TOTAL_TIME` TIME  NOT NULL DEFAULT '00:00',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `SESSION_ID`
    )
);

CREATE TABLE `LECTURE_CLASSES` (
    `CLASS_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `SESSION_ID` BIGINT  NOT NULL ,
    `CLASS_TIME` TIME  NOT NULL DEFAULT '00:00',
    `CLASS_VIDEO_URL` VARCHAR(200)  NOT NULL ,
    `CLASS_NAME` VARCHAR(50)  NOT NULL ,
    `CLASS_ROLE_ID` INT  NOT NULL DEFAULT 1,
    `ROLE_DESCRIPTION` VARCHAR(20)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `CLASS_ID`
    )
);

CREATE TABLE `STATUS_OF_CLASS` (
    `USER_ID` BIGINT  NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active'
);

CREATE TABLE `USER_CLASS_HISTORIES` (
    `HISTORY_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `CLASS_ID` BIGINT  NOT NULL ,
    `WACHED_TIME` TIME  NOT NULL DEFAULT '00:00',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `HISTORY_ID`
    )
);

CREATE TABLE `LECTURE_REVIEWS` (
    `LECTURE_REVIEW_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `STAR_POINT` INT  NOT NULL DEFAULT 0,
    `REVIEW_COMMENT` TEXT  NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `LECTURE_REVIEW_ID`
    )
);

CREATE TABLE `BOARDS` (
    `BOARD_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `CLASS_ID` BIGINT  NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `BOARD_TITLE` VARCHAR(50)  NOT NULL ,
    `BOARD_CONTENT` TEXT  NOT NULL DEFAULT '',
    `BOARD_TYPE` INT  NOT NULL DEFAULT 0,
    `BOARD_TYPE_DESCRIPTION` VARCHAR(20)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `BOARD_ID`
    )
);

CREATE TABLE `ANSWERS` (
    `ANSWER_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `BOARD_ID` BIGINT  NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `ANSWER_TITLE` VARCHAR(50)  NOT NULL ,
    `ANSWER_CONTENT` TEXT  NOT NULL DEFAULT '',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `ANSWER_ID`
    )
);

CREATE TABLE `LECTURE_NOTICE` (
    `NOTICE_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `NOTICE_TITLE` VARCHAR(50)  NOT NULL ,
    `NOTICE_CONTENT` TEXT  NOT NULL DEFAULT '',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `NOTICE_ID`
    )
);

CREATE TABLE `COMMENTS` (
    `COMMENT_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `NOTICE_ID` BIGINT  NOT NULL ,
    `ANSWER_ID` BIGINT  NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `COMMENT_CONTENT` TEXT  NOT NULL DEFAULT '',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `COMMENT_ID`
    )
);

CREATE TABLE `USER_COUPONS` (
    `USER_COUPON_ID` INT AUTO_INCREMENT NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `COUPON_ID` BIGINT  NOT NULL ,
    `COUPON_CODE` VARCHAR(100)  NULL ,
    `COUPON_VALIDITY` DATETIME  NULL ,
    `IS_USED` CHAR(1)  NOT NULL DEFAULT 'n',
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `USER_COUPON_ID`
    )
);

CREATE TABLE `COUPONS` (
    `COUPON_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `COUPON_INFOMATION` VARCHAR(20)  NOT NULL ,
    `COUPON_DESCRIPTION` VARCHAR(50)  NOT NULL DEFAULT '',
    `COUPON_TYPE` CHAR(1)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `COUPON_ID`
    )
);

CREATE TABLE `BASKET_ITEMS` (
    `BASKET_ID` BIGINT  NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active'
);

CREATE TABLE `BASKETS` (
    `BASKET_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `BASKET_ID`
    )
);

CREATE TABLE `LECTURE_TOP_CATEGORIES` (
    `BIG_CATEGORY_ID` INT AUTO_INCREMENT NOT NULL ,
    `BIG_CATEGORY_NAME` VARCHAR(20)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `BIG_CATEGORY_ID`
    )
);

CREATE TABLE `LECTURE_MIDDLE_CATEGORIES` (
    `MIDDLE_CATEGORY_ID` INT AUTO_INCREMENT NOT NULL ,
    `MIDDLE_CATEGORY_NAME` VARCHAR(20)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `MIDDLE_CATEGORY_ID`
    )
);

CREATE TABLE `MIDDLE_CATEGORY_TAGS` (
    `CATEGORY_TAG_ID` INT AUTO_INCREMENT NOT NULL ,
    `CATEGORY_TAG_NAME` VARCHAR(20)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `CATEGORY_TAG_ID`
    )
);

CREATE TABLE `LECTURE_TAGS` (
    `LECTURE_ID` BIGINT  NOT NULL ,
    `BIG_CATEGORY_ID` INT  NOT NULL ,
    `MIDDLE_CATEGORY_ID` INT  NOT NULL ,
    `CATEGORY_TAG_ID` INT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active'
);

CREATE TABLE `ROADMAPS` (
    `ROADMAP_ID` INT AUTO_INCREMENT NOT NULL ,
    `ROADMAP_NAME` VARCHAR(20)  NOT NULL ,
    `ROADMAP_DESCRIPTION` TEXT  NOT NULL DEFAULT '',
    `USER_ID` BIGINT  NOT NULL ,
    `IMAGE_URL` VARCHAR(200)  NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `ROADMAP_ID`
    )
);

CREATE TABLE `ROADMAP_ITEMS` (
    `ROADMAP_ITEM_ID` INT AUTO_INCREMENT NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `ROADMAP_ID` INT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `ROADMAP_ITEM_ID`
    )
);

CREATE TABLE `WISH_LISTS` (
    `WISH_LIST_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `USER_ID` BIGINT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active',
    PRIMARY KEY (
        `WISH_LIST_ID`
    )
);

CREATE TABLE `WISH_LIST_ITEM` (
    `LECTURE_ID` BIGINT  NOT NULL ,
    `WISH_LIST_ID` BIGINT  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'active'
);

CREATE TABLE `USER_BUY_HISTORIES` (
    `USER_BUY_ID` BIGINT AUTO_INCREMENT NOT NULL ,
    `LECTURE_ID` BIGINT  NOT NULL ,
    `SALE_PRICE` INT  NOT NULL DEFAULT 0,
    `RECEIPT` VARCHAR(50)  NOT NULL ,
    `STATEMENT_OF_TRANSACTION` VARCHAR(50)  NOT NULL ,
    `CREATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `UPDATED_AT` TIMESTAMP  NOT NULL DEFAULT current_timestamp,
    `STATUS` VARCHAR(50)  NOT NULL DEFAULT 'bought',
    PRIMARY KEY (
        `USER_BUY_ID`
    )
);

ALTER TABLE `USERS` ADD CONSTRAINT `fk_USERS_USER_ROLE_KEY` FOREIGN KEY(`USER_ROLE_KEY`)
REFERENCES `USER_ROLES` (`USER_ROLE_KEY`);

ALTER TABLE `LECTURES` ADD CONSTRAINT `fk_LECTURES_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `LECTURE_SESSION` ADD CONSTRAINT `fk_LECTURE_SESSION_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `LECTURE_CLASSES` ADD CONSTRAINT `fk_LECTURE_CLASSES_SESSION_ID` FOREIGN KEY(`SESSION_ID`)
REFERENCES `LECTURE_SESSION` (`SESSION_ID`);

ALTER TABLE `STATUS_OF_CLASS` ADD CONSTRAINT `fk_STATUS_OF_CLASS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `STATUS_OF_CLASS` ADD CONSTRAINT `fk_STATUS_OF_CLASS_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `USER_CLASS_HISTORIES` ADD CONSTRAINT `fk_USER_CLASS_HISTORIES_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `USER_CLASS_HISTORIES` ADD CONSTRAINT `fk_USER_CLASS_HISTORIES_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `USER_CLASS_HISTORIES` ADD CONSTRAINT `fk_USER_CLASS_HISTORIES_CLASS_ID` FOREIGN KEY(`CLASS_ID`)
REFERENCES `LECTURE_CLASSES` (`CLASS_ID`);

ALTER TABLE `LECTURE_REVIEWS` ADD CONSTRAINT `fk_LECTURE_REVIEWS_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `LECTURE_REVIEWS` ADD CONSTRAINT `fk_LECTURE_REVIEWS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `BOARDS` ADD CONSTRAINT `fk_BOARDS_CLASS_ID` FOREIGN KEY(`CLASS_ID`)
REFERENCES `LECTURE_CLASSES` (`CLASS_ID`);

ALTER TABLE `BOARDS` ADD CONSTRAINT `fk_BOARDS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `ANSWERS` ADD CONSTRAINT `fk_ANSWERS_BOARD_ID` FOREIGN KEY(`BOARD_ID`)
REFERENCES `BOARDS` (`BOARD_ID`);

ALTER TABLE `ANSWERS` ADD CONSTRAINT `fk_ANSWERS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `LECTURE_NOTICE` ADD CONSTRAINT `fk_LECTURE_NOTICE_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `LECTURE_NOTICE` ADD CONSTRAINT `fk_LECTURE_NOTICE_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `COMMENTS` ADD CONSTRAINT `fk_COMMENTS_NOTICE_ID` FOREIGN KEY(`NOTICE_ID`)
REFERENCES `LECTURE_NOTICE` (`NOTICE_ID`);

ALTER TABLE `COMMENTS` ADD CONSTRAINT `fk_COMMENTS_ANSWER_ID` FOREIGN KEY(`ANSWER_ID`)
REFERENCES `ANSWERS` (`ANSWER_ID`);

ALTER TABLE `COMMENTS` ADD CONSTRAINT `fk_COMMENTS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `USER_COUPONS` ADD CONSTRAINT `fk_USER_COUPONS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `USER_COUPONS` ADD CONSTRAINT `fk_USER_COUPONS_COUPON_ID` FOREIGN KEY(`COUPON_ID`)
REFERENCES `COUPONS` (`COUPON_ID`);

ALTER TABLE `BASKET_ITEMS` ADD CONSTRAINT `fk_BASKET_ITEMS_BASKET_ID` FOREIGN KEY(`BASKET_ID`)
REFERENCES `BASKETS` (`BASKET_ID`);

ALTER TABLE `BASKET_ITEMS` ADD CONSTRAINT `fk_BASKET_ITEMS_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `BASKETS` ADD CONSTRAINT `fk_BASKETS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `LECTURE_TAGS` ADD CONSTRAINT `fk_LECTURE_TAGS_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `LECTURE_TAGS` ADD CONSTRAINT `fk_LECTURE_TAGS_BIG_CATEGORY_ID` FOREIGN KEY(`BIG_CATEGORY_ID`)
REFERENCES `LECTURE_TOP_CATEGORIES` (`BIG_CATEGORY_ID`);

ALTER TABLE `LECTURE_TAGS` ADD CONSTRAINT `fk_LECTURE_TAGS_MIDDLE_CATEGORY_ID` FOREIGN KEY(`MIDDLE_CATEGORY_ID`)
REFERENCES `LECTURE_MIDDLE_CATEGORIES` (`MIDDLE_CATEGORY_ID`);

ALTER TABLE `LECTURE_TAGS` ADD CONSTRAINT `fk_LECTURE_TAGS_CATEGORY_TAG_ID` FOREIGN KEY(`CATEGORY_TAG_ID`)
REFERENCES `MIDDLE_CATEGORY_TAGS` (`CATEGORY_TAG_ID`);

ALTER TABLE `ROADMAPS` ADD CONSTRAINT `fk_ROADMAPS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `ROADMAP_ITEMS` ADD CONSTRAINT `fk_ROADMAP_ITEMS_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `ROADMAP_ITEMS` ADD CONSTRAINT `fk_ROADMAP_ITEMS_ROADMAP_ID` FOREIGN KEY(`ROADMAP_ID`)
REFERENCES `ROADMAPS` (`ROADMAP_ID`);

ALTER TABLE `WISH_LISTS` ADD CONSTRAINT `fk_WISH_LISTS_USER_ID` FOREIGN KEY(`USER_ID`)
REFERENCES `USERS` (`USER_ID`);

ALTER TABLE `WISH_LIST_ITEM` ADD CONSTRAINT `fk_WISH_LIST_ITEM_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

ALTER TABLE `WISH_LIST_ITEM` ADD CONSTRAINT `fk_WISH_LIST_ITEM_WISH_LIST_ID` FOREIGN KEY(`WISH_LIST_ID`)
REFERENCES `WISH_LISTS` (`WISH_LIST_ID`);

ALTER TABLE `USER_BUY_HISTORIES` ADD CONSTRAINT `fk_USER_BUY_HISTORIES_LECTURE_ID` FOREIGN KEY(`LECTURE_ID`)
REFERENCES `LECTURES` (`LECTURE_ID`);

